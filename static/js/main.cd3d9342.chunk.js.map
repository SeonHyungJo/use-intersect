{"version":3,"sources":["../../src/index.tsx","../../src/util/index.ts","App.js","index.js"],"names":["initalOptions","root","rootMargin","thresholds","onIntersect","customOptions","observer","targetRef","observerOptions","window","IntersectionObserver","entries","forEach","entry","isIntersecting","target","unobserve","setTimeout","targetEle","top","bottom","innerHeight","getComputedStyle","display","filter","diffObserve","length","document","removeEventListener","addEventListener","observe","setElement","push","intersectionObserver","current","App","customeRef","useIntersect","console","log","ref","className","ReactDOM","render","getElementById"],"mappings":"gLASMA,G,KAAiC,CACrCC,KAAM,KACNC,WAAY,MACZC,WAAY,I,EAGO,SACnBC,EACAC,GAEA,IAEIC,EAFEC,EAAY,mBACZC,EAAmCH,GAAiBL,EAa1D,OAVA,qBAAU,WACRM,EClBgC,SAACF,EAAuBI,GAC1D,GAAI,yBAA0BC,OAAQ,CACpC,IAAM,EAAW,IAAIC,sBAAqB,SAACC,GACzCA,EAAQC,SAAQ,SAACC,GACXA,EAAMC,iBACRV,EAAYS,EAAME,QAClB,EAASC,UAAUH,EAAME,cAG5BP,GACH,OAAO,EAEP,IAAI,GAAS,EACT,EAA+B,GAE7B,EAAW,SAAX,KACW,IAAX,IACF,GAAS,EAETS,YAAW,WACT,EAAaL,SAAQ,SAACM,GACd,gCAAEC,EAAA,EAAAA,IAAKC,EAAA,EAAAA,OAERD,GAAOV,OAAOY,aAAeD,GAAU,GAA8C,SAAxCE,iBAAiBJ,GAAWK,UAC5EnB,EAAYc,GAMgB,KAJ5B,EAAe,EAAaM,QAAO,SAACC,GAClC,OAAOA,IAAgBP,MAGRQ,SACfC,SAASC,oBAAoB,SAAU,GACvCnB,OAAOmB,oBAAoB,SAAU,GACrCnB,OAAOmB,oBAAoB,oBAAqB,QAItD,GAAS,IACR,OAQP,OAJAD,SAASE,iBAAiB,SAAU,GACpCpB,OAAOoB,iBAAiB,SAAU,GAClCpB,OAAOoB,iBAAiB,oBAAqB,GAEtC,CACLC,QAAS,SAACC,GACR,EAAaC,KAAKD,KD9BXE,CAAqB7B,EAAaI,MAG/C,qBAAU,WACU,OAAdD,GACFD,EAASwB,QAAQvB,EAAU2B,WAE5B,CAAC3B,IAEGA,GEKM4B,EAlCH,WACV,IAIMC,EAAaC,GAJK,SAACtB,GACvBuB,QAAQC,IAAI,YAAaxB,MAK3B,OACE,oCACE,yBAAKyB,IAAKJ,EAAYK,UAAW,YACjC,yBAAKA,UAAW,YAChB,yBAAKA,UAAW,YAChB,yBAAKA,UAAW,YAChB,yBAAKA,UAAW,YAChB,yBAAKA,UAAW,YAChB,yBAAKA,UAAW,YAChB,yBAAKA,UAAW,YAChB,yBAAKA,UAAW,YAChB,yBAAKA,UAAW,YAChB,yBAAKA,UAAW,YAChB,yBAAKA,UAAW,YAChB,yBAAKA,UAAW,YAChB,yBAAKA,UAAW,YAChB,yBAAKA,UAAW,YAChB,yBAAKA,UAAW,YAChB,yBAAKA,UAAW,YAChB,yBAAKA,UAAW,YAChB,yBAAKA,UAAW,YAChB,yBAAKA,UAAW,YAChB,yBAAKD,IAAKJ,EAAYK,UAAW,YACjC,yBAAKD,IAAKJ,EAAYK,UAAW,cC5BvCC,IAASC,OAAO,kBAAC,EAAD,MAAShB,SAASiB,eAAe,U","file":"static/js/main.cd3d9342.chunk.js","sourcesContent":["import { useEffect, useRef } from \"react\";\nimport { intersectionObserver, CustomObserve } from \"./util\";\n\nexport interface ObserverOptions {\n  root: Element | null;\n  rootMargin: string;\n  thresholds: number;\n}\n\nconst initalOptions: ObserverOptions = {\n  root: null,\n  rootMargin: \"0px\",\n  thresholds: 0\n};\n\nconst useIntersect = (\n  onIntersect: Function,\n  customOptions?: ObserverOptions\n) => {\n  const targetRef = useRef<any>();\n  const observerOptions: ObserverOptions = customOptions || initalOptions;\n  let observer: IntersectionObserver | CustomObserve;\n\n  useEffect(() => {\n    observer = intersectionObserver(onIntersect, observerOptions);\n  });\n\n  useEffect(() => {\n    if (targetRef !== null) {\n      observer.observe(targetRef.current as Element);\n    }\n  }, [targetRef]);\n\n  return targetRef;\n};\n\nexport default useIntersect;\n","import { ObserverOptions } from \"../index\"\n\nexport interface CustomObserve {\n  observe: Function\n}\n\nexport const intersectionObserver = (onIntersect: Function, observerOptions: ObserverOptions) => {\n  if (\"IntersectionObserver\" in window) {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry: IntersectionObserverEntry) => {\n        if (entry.isIntersecting) {\n          onIntersect(entry.target)\n          observer.unobserve(entry.target);\n        }\n      })\n    }, observerOptions)\n    return observer\n  } else {\n    let active = false;\n    let observedList: Array<Element> = []\n\n    const observer = () => {\n      if (active === false) {\n        active = true;\n\n        setTimeout(() => {\n          observedList.forEach((targetEle: Element) => {\n            const { top, bottom } = targetEle.getBoundingClientRect()\n\n            if ((top <= window.innerHeight && bottom >= 0) && getComputedStyle(targetEle).display !== \"none\") {\n              onIntersect(targetEle)\n\n              observedList = observedList.filter((diffObserve) => {\n                return diffObserve !== targetEle;\n              });\n\n              if (observedList.length === 0) {\n                document.removeEventListener(\"scroll\", observer);\n                window.removeEventListener(\"resize\", observer);\n                window.removeEventListener(\"orientationchange\", observer);\n              }\n            }\n          });\n          active = false;\n        }, 200);\n      }\n    };\n\n    document.addEventListener(\"scroll\", observer);\n    window.addEventListener(\"resize\", observer);\n    window.addEventListener(\"orientationchange\", observer);\n\n    return {\n      observe: (setElement: Element) => {\n        observedList.push(setElement)\n      }\n    }\n  }\n}\n","import React from 'react'\n\nimport useIntersect from 'use-intersect'\n\nconst App = () => {\n  const onIntersectFunc = (target) => {\n    console.log('intersect', target)\n  }\n\n  const customeRef = useIntersect(onIntersectFunc)\n\n  return (\n    <>\n      <div ref={customeRef} className={'testDiv'} />\n      <div className={'testDiv'} />\n      <div className={'testDiv'} />\n      <div className={'testDiv'} />\n      <div className={'testDiv'} />\n      <div className={'testDiv'} />\n      <div className={'testDiv'} />\n      <div className={'testDiv'} />\n      <div className={'testDiv'} />\n      <div className={'testDiv'} />\n      <div className={'testDiv'} />\n      <div className={'testDiv'} />\n      <div className={'testDiv'} />\n      <div className={'testDiv'} />\n      <div className={'testDiv'} />\n      <div className={'testDiv'} />\n      <div className={'testDiv'} />\n      <div className={'testDiv'} />\n      <div className={'testDiv'} />\n      <div className={'testDiv'} />\n      <div ref={customeRef} className={'testDiv'} />\n      <div ref={customeRef} className={'testDiv'} />\n    </>\n  )\n}\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}